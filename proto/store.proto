syntax = "proto3";

package distributedstore;

service KeyValueStore {
  rpc put(PutRequest) returns (PutResponse);
  rpc get(GetRequest) returns (GetResponse);

  rpc slowDown(SlowDownRequest) returns (SlowDownResponse);
  rpc restore(RestoreRequest) returns (RestoreResponse);

  // RPCs pel 2PC
  rpc canCommit(CommitRequest) returns (CommitResponse);
  rpc doCommit(CommitRequest) returns (Empty);

  // RPC per registrar Slaves al Master
  rpc registerSlave(RegisterSlaveRequest) returns (RegisterSlaveResponse);
}

message PutRequest {
  string key = 1;
  string value = 2;
}

message PutResponse {
  bool success = 1;
}

message GetRequest {
  string key = 1;
}

message GetResponse {
  string value = 1;
  bool found = 2;
}

message SlowDownRequest {
  int32 seconds = 1;
}

message SlowDownResponse {
  bool success = 1;
}

message RestoreRequest {}

message RestoreResponse {
  bool success = 1;
}

message CommitRequest {
  string key = 1;
  string value = 2;
}

message CommitResponse {
  bool can_commit = 1;
}

message Empty {}

message RegisterSlaveRequest {
  string address = 1;               // De la forma ip:port
}

message RegisterSlaveResponse {
  bool success = 1;
  map<string, string> state = 2;
}